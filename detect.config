# Issue to detect
source=issue
issue=52282

# Once this parameter is set to a number n larger than 1, the test would be executed n times. The test pass only if all attemtps are successful. 
# This setup is used to detect test with unstable results.
# 最大重试测试次数，可在 testcase 的 config 文件中定义,会覆盖这个设置
max_attempts=1

REGRESSION_DETECT_ROOT="/Users/yichenhan/workload/regression_detection/"
TEST_SCRIPT_ROOT="/Users/yichenhan/workload/regression_detection/testcase"
TIDB_LOC="/Users/yichenhan/dummy/tidb"
TIUP_DATA_DIR="/Users/yichenhan/.tiup/data"

# List of releases to detect
# 版本列表
versions_minimum=("v6.5.3" "v6.5.4" "v6.5.5")
versions_master=("v5.4.0" "v6.0.0" "v6.1.0" "v6.2.0" "v6.3.0" "v6.4.0" "v6.5.0" "v6.6.0" "v7.0.0" "v7.1.0" "v7.2.0" "v7.3.0" "v7.4.0" "v7.5.0" "v7.6.0" "v8.0.0" "nightly")
versions_v6_1=("v6.1.0" "v6.1.1" "v6.1.2" "v6.1.3" "v6.1.4" "v6.1.5" "v6.1.6" "v6.1.7")
versions_v6_5=("v6.5.0" "v6.5.1" "v6.5.2" "v6.5.3" "v6.5.4" "v6.5.5" "v6.5.6" "v6.5.7" "v6.5.8")
versions_v7_1=("v7.1.0" "v7.1.1" "v7.1.2" "v7.1.3" "v7.1.4")
versions_v7_5=("v7.5.0" "v7.5.1")
versions_patch_all=("${versions_v6_1[@]}" "${versions_v6_5[@]}" "${versions_v7_1[@]}" "${versions_v7_5[@]}")

# Versions to check
# 需要检查的版本
versions=("${versions_master[@]}")
# Version names. Need to be consistent with the $versions.
versions_name="versions_master"

# 记录版本检查结果
results=()

# Parameter to setup test
# 设置测试运行参数
DB_HOST="127.0.0.1"
DB_PORT="4000"
DB_USER="root"
DB_NAME="test"
#DB_PASSWORD="your_password"

TEST_SCRIPT_LOC="${TEST_SCRIPT_ROOT}/${source}${issue}"
TEST_SCRIPT="${TEST_SCRIPT_LOC}/${source}${issue}_testcase.sql"
TEST_RESULT="${TEST_SCRIPT_LOC}/${source}${issue}.result"
TEST_RUN="${REGRESSION_DETECT_ROOT}/regression_detect_runtest.sh"
TEST_CONFIG="${TEST_SCRIPT_LOC}/${source}${issue}.config"

# Timeout settings for all operations.
# 最大等待时间，单位为秒
max_wait=100

# Log setup
# Logs for release detection
current_time=$(date +"%Y%m%d_%H%M")
log_file="${TEST_SCRIPT_LOC}/tiup-check-full-${versions_name}-${source}-${issue}.log"
status_file="${TEST_SCRIPT_LOC}/tiup-check-status-${versions_name}-${source}-${issue}.log"
# Logs for commit detection
bisect_full_log="${TEST_SCRIPT_LOC}/bisect-full-${source}-${issue}.log"
bisect_log="${TEST_SCRIPT_LOC}/bisect-status-${source}-${issue}.log"